<!DOCTYPE html>

<html>
  <head>



     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>



    <script src="js/knockout-3.4.1.js"></script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjNHWnXLbhirJhIFPIh3W1jhg1tVZ7qtA&libraries=places&callback=initAutocomplete"
  async defer></script>





    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Neighborhood Map</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
 
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

    #map {
        bottom:0px;
        height: 100%;
        left: 362px;
        position: absolute;
        right: 0px;
      }
      .options-box {
        background: #fff;
        border: 1px solid #999;
        border-radius: 3px;
        height: 100%;
        line-height: 35px;
        padding: 10px 10px 30px 10px;
        text-align: left;
        width: 340px;
      }
           .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;

      }

      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {

        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;

        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width:60%;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }

      .container {
        height: 100%;
        position: relative;
      }
      input {
        font-size: 12px;
      }
      h1 {
        color: #525454;
        font-size: 22px;
        margin: 0 0 10px 0;
        text-align: center;
      }



        .list_item {
          padding: 2em;

        }


      @media (max-width: 1024px) {
        .nav {
          font-size:40px;
        }
        .list_item {
          padding: 2em;
          width:50%;
        }
        #map {
          width: 100%;
        }
    }

    </style>
  </head>
  <body>
  



  <div class="container">

      
        

    <div class = "nav">



<h1>Saved Location</h1> 
<select data-bind="options: locations,
           value:selectedOption, 
           optionsText: 'title',
           optionsCaption: 'Choose...'">
</select> 


 <ul data-bind="foreach: { data: getCurrentLocations(), as: 'locations' }">
         <li class = "list_item"> 
            <a data-bind="text:title, attr: {id: title}" onclick="focusLocation(this.id)" href = #></a>
         </li>
 </ul>
      </div>
    
  </div>
    <div id="map"></div>
   

    <script async>

    
   var locations = [
          {title: 'Yoshkar-Ola , Russia', location: {lat: 56, lng: 47}},
          {title: 'Kyoto , Japan', location: {lat: 35, lng: 138.2529}},
          {title: 'Rome , Italy', location: {lat: 41.9028, lng: 12.4964}},
          {title: 'Reykjavik , Iceland', location: {lat: 64, lng: -21}},
          {title: 'Quebec City , Canada', location: {lat: 46, lng: -71}},
          {title: 'Sydney , Australia', location: {lat: -33, lng: 151}}
        ];

   var fourSqrsVenues = [];
   var fourSqrsData = [];
   var markers = [];
   var info_windows = [];



var viewModel = {
    locations: ko.observableArray(locations),
    selectedOption: ko.observable(''),
    getCurrentLocations: function() {
        var selectedVal = this.selectedOption();

        if (!selectedVal)
          return this.locations;

        return this.locations().filter(function(f) {
            return f.location == selectedVal.location;
        });
    },

    focusMarker : function(place) {
     
        map.setCenter(locations[place].location);
        map.setZoom(4);

    }

};

ko.applyBindings(viewModel);


        var location_marker;
        var map;




      function createMarker(lat, lon, infoText, imgData) {
          var newmarker = new google.maps.Marker({
              position: new google.maps.LatLng(lat, lon),
              map: map,
              title: infoText
          });


          newmarker['infowindow'] = new google.maps.InfoWindow({
                content: imgData         
            });


           google.maps.event.addListener(newmarker, 'click', function() {

              var test = fourSqrsVenues;

              this['infowindow'].open(map, this);
            });

          
      }


      function processMarkers(_markers) {
          for (var i = 0; i < _markers.length; i++) {
   
            var _venueId;
            var _venueData;

            var fourSqrAPI = "https://api.foursquare.com/v2/venues/search?ll=" + _markers[i].position.lat() + "," + _markers[i].position.lng() +"&client_id=RMUX5HBSR5HMDKG3RCXK3O2VIY0BCRNMSD14V2DGQV0PK02U&client_secret=I3TIMAEYGCPDPB1T0332OOF3O2JP454OZ0PVCGWOXB1UIR4Y&v=20170323";

            $.getJSON( fourSqrAPI, {})
              .done(function( data ) {

                var venueId = data.response.venues[0].id;
                _venueId = data.response.venues[0].id;

                fourSqrsVenues.push(venueId);

              });
                
              var mylat = markers[i].position.lat();
              var mylng = markers[i].position.lng();
              var mytitle = markers[i].position.title;
              var myimg = _venueData;


              createMarker(_markers[i].position.lat(), _markers[i].position.lng(), _markers[i].title, _venueData);

          }

      }


      function initAutocomplete() {
         map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 31.7917 , lng: 7.0926},
          zoom: 3,
          mapTypeId: 'roadmap'
        });



          
 
                for (var i = 0; i < locations.length; i++) {

                      location_marker = new google.maps.Marker({
                        map: map,
                        title: locations[i].title,
                        position: locations[i].location,
                      });
                      


                      markers.push(location_marker);                    

                };

               
                  processMarkers(markers);
            
          };

      function focusMarker(place){
       map.setCenter(locations[place].location);
       map.setZoom(4);
      };
          
      function focusLocation(clicked_id) {
          i=0;  
          while (i < 6) {
              
              if (clicked_id == locations[i].title) { 

                focusMarker(i);
                return;
                 }
              else { 
                i++;
              }
             
          };

      }

    </script>

    
  </body>
</html>
